type Query {
  """
  Get price breaks for an item
  """
  priceBreaks(
    """
     the sku id
    """
    itemId: String
    """
     seller id
    """
    sellerId: String
    """
    Trade policy id
    """
    tradePolicyId: String
    """
    Postal code
    """
    postalCode: String
  ): [PriceBreak] @cacheControl(scope: SEGMENT, maxAge: SHORT) @withSegment

  """
  Get price breaks for an item
  """
  leadTime(
    """
     the sku id
    """
    skuId: String
    """
    buying quantity
    """
    quantity: Int
    """
    Postal code
    """
    postalCode: String
    """
    Seller id
    """
    sellerId: String
  ): ShippingInfo @cacheControl(scope: SEGMENT, maxAge: SHORT) @withSegment

  """
  Get available inventory
  """
  availableInventory(
    """
     the sku id
    """
    skuId: String
  ): AvailableInventory @cacheControl(scope: SEGMENT, maxAge: SHORT) @withSegment

  """
  Search documents with pagination
  """
  documentsWithPagination(
    """
    Schema name. e.g.: CL, AD
    """
    acronym: String
    """
    Fields that will be returned by document. e.g.: _fields=email,firstName,document
    """
    fields: [String]
    """
    Pagination. Default: 1
    """
    page: Int = 1
    """
    Items returned in the page. Default: 15
    """
    pageSize: Int = 15
    """
    Filters the results. eg.: _where=email=my@email.com
    """
    where: String
    """
    Defines the Master Data schema to be used
    """
    schema: String
  ): DocumentsPage
}
